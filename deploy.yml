- hosts: staging
  tasks:
    - include_vars: secrets.yml

    - name: Install required build packages
      apt:
        name: ["git"]

    - name: Add the user "cast" with a bash shell
      user:
        name: cast
        shell: /bin/bash

    - name: Create a new postgres database with name "{{ cast_postgres_database }}"
      community.general.postgresql_db:
        name: "{{ cast_postgres_database }}"
        state: present
      become: true
      become_user: postgres

    - name: Create a new postgres user with name "{{ cast_postgres_user }}"
      community.general.postgresql_user:
        db: "{{ cast_postgres_database }}"
        name: "{{ cast_postgres_user }}"
        password: "{{ cast_postgres_password }}"
        state: present
      become: true
      become_user: postgres

    - name: Git checkout repository
      git:
        repo: "https://github.com/ephes/cast_hosting"
        dest: /home/cast/site
      become: true
      become_user: cast

    - name: Create .env file
      template:
        src: env.template.j2
        dest: /home/cast/site/.env
        mode: '0600'
      become: true
      become_user: cast

    - name: Install poetry
      shell: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | /usr/local/bin/python3.9
      args:
        warn: no
      become: true
      become_user: cast

    - name: Replace python3 in poetry bin with python3.9 :(
      lineinfile:
        path: /home/cast/.poetry/bin/poetry
        regexp: "python3"
        line: "#!/usr/bin/env python3.9"

    - name: Install poetry dependencies
      shell: /home/cast/.poetry/bin/poetry install
      args:
        chdir: /home/cast/site
      become: true
      become_user: cast

    - name: Find path to poetry venv interpreter
      shell: find /home/cast/.cache/pypoetry/virtualenvs -name python | grep bin
      register: find_python

    - set_fact:
        python_bin_path={{ find_python.stdout }}

    - name: Run django migrations
      shell: "{{ python_bin_path }} manage.py migrate"
      args:
        chdir: /home/cast/site
      become: true
      become_user: cast

    # Gunicorn
    - name: Create a symbolic link for gunicorn systemd service
      file:
        src: /home/cast/site/cast.service
        dest: /etc/systemd/system/cast.service
        state: link

    - name: Make sure cast gunicorn service is running
      systemd:
        state: restarted
        name: cast

    - name: Create a symbolic link for django_cast traefik loadbalancer
      file:
        src: /home/cast/site/django_cast.traefik.yml
        dest: /etc/traefik/dynamic/django_cast.traefik.yml
        state: link

    - name: Create a symbolic link for python-podcast traefik loadbalancer
      file:
        src: /home/cast/site/python_podcast.traefik.yml
        dest: /etc/traefik/dynamic/python_podcast.traefik.yml
        state: link
  
    - name: Create a symbolic link for wersdoerfer traefik loadbalancer
      file:
        src: /home/cast/site/wersdoerfer.traefik.yml
        dest: /etc/traefik/dynamic/wersdoerfer.traefik.yml
        state: link